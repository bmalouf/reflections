When would you want to use a remote repository rather than keeping all your work
local?
If I am working from multiple machines, if multiple people are contributing, or if I want an offsite backup

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
your local repo may be more current than the remote.  someone else may push a new commit which conflicts with what you are working on.
many projects are too complex to just automatically sync, which is why git takes the default approach of commting, pushing, pulling manually.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
forks are a github function, used to copy an existing repo into a new repo, while referencing the original
clones are copies of a repo.  you can clone from github to a local machine, or local to loacl
branches are other versions of code in a single repository that can be edited independently, but at some point share a common ancestor

What is the benefit of having a copy of the last known state of the remote
stored locally?
It let's you keep track of what you have not pushed, and also a state of reference if the remote gets updated by someone else.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
depending on the size of the project and number of collaboraters, could do so through email, or a cloud storage service.
a small project that could be split to avoid conflicts might be easier over email, but in general collaboration is much easier through github.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?
When you are trying something experimental, or testing a new feature that you aren't ready to release in the master branch yet.
This gives you the freedom to test and experiment, to either eventaully incorporate, or easily discard, as the master branch is not affected.
